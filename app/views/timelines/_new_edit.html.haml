/
/ Hidden help divs used on 'new-timeline' page.
/
%div{:id => "help_popup_tl_title", :style => "display: none"}
  %h3 This is how timeline title will get displayed
  %br
  %img{:src => "/assets/help-tl-title.png"}

%div{:id => "help_popup_tl_image", :style => "display: none"}
  %h3 This is how timeline image will get displayed
  %br
  %img{:src => "/assets/help-tl-image.png"}

%div{:id => "help_popup_tl_desc", :style => "display: none"}
  %h3 This is how timeline description will get displayed
  %br
  %img{:src => "/assets/help-tl-desc.png"}

/---------------------------------------------------
   
/
/ To show busy indicator
/
= render :partial => "busy_indicator", :locals => {:given_message => "Saving changes ..."}

/===============================================

%div.row.span12
  %div.tabbable.main_two_tabs
    /
    / Top-level 2 tab links
    /
    %ul.nav.nav-tabs.for_main_tabs
      -if cur_op == "new"
        %li.active
          %a{:href => "#tab-one", :"data-toggle" => "tab", :title => "Timeline summary"}
            %i.icon-time
            Timeline Summary
      -else 
        %li 
          %a{:href => "#tab-one", :"data-toggle" => "tab", :title => "Timeline summary", :rel => "tooltip" , :onClick => "cleanTLSummarySuccessMessage()"}
            %i.icon-time
            Timeline Summary
        %li.active
          %a{:href => "#tab-two", :"data-toggle" => "tab", :title => "Events for this timeline ", :rel => "tooltip"}
            %i.icon-list
            Events in the timeline
        %li
          %div.span7.top_return_link_div
            %a.pull-right{:href => "#{timeline_path(@timeline)}"} Return to timeline page

    %div.tab-content
      /
      / ACTUAL TIMELINE SUMMARY tab
      /
      /%div#tab-one.span8.tab-pane.active{:title => "Timeline summary", :rel => "tooltip"}
      %div#tab-one{:class => (cur_op == "new")? "span8 tab-pane active" : "span8 tab-pane"}
        -if cur_op == "new"
          -remoteValue = false
        -else
          -remoteValue = true
        = form_for(@timeline, :remote => remoteValue,:html => {:id => "timeline-form"}) do |tf|
          = tf.error_messages
          -if cur_op == "edit"
            %div.errorExplanation.hide{:id => "tlsummaryErrors"}
            %div.alert.alert-success.hide{:id => "tlsummarySuccessMessage"}
          
          %div.span4.pull-left
            /%h4{:style => "margin-bottom: 10px"}
            /  %i.icon-time
            /  Timeline summary
            %div.well
              %div.help_icon_div
                = label :timeline, :title, 'Title',:class => "eventlabel"
                %img.tl_upper_help_icon{:src => "/assets/q2.png", :id => "tl_title", :rel => "popover", "data-title" => "", "data-placement" => "right"}
              = text_field :timeline, :title, :class => "span3",:placeholder => "Provide title of this timeline."

              %div.help_icon_div
                = label :timeline, :desc, 'Description',:class => "eventlabel"
                %img.tl_upper_help_icon{:src => "/assets/q2.png", :id => "tl_desc", :rel => "popover", "data-title" => "","data-placement" => "right"}
              = text_area :timeline, :desc, :class => "span3", :size => "80x4", :placeholder => "Describe the timeline here."

              %div.help_icon_div
                = label :timeline, :imgurl, 'Image Link',:class => "eventlabel"
                %img.tl_lower_help_icon{:src => "/assets/q2.png", :id => "tl_image", :rel => "popover", "data-title" => "","data-placement" => "right"}
              = text_field :timeline, :imgurl, :class => "span3", :default => "http://", :placeholder => "eg: http://upload.wikimedia.org/Shivaji.jpg"

              = label :timeline, :tags, 'Tags'
              = text_field :timeline, :tags, :class => "span3", :placeholder => "eg: shivaji, maratha, raigad"
              
            -if cur_op == "new"
              %hr
              %div.center
                %a.btn{:href => root_path}
                  = p "Cancel"
                %span
                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                = button_tag(:type => "submit", :onclick => "return resetWarnFlag();" ,:class => "btn btn-primary") do
                  %i.icon-ok.icon-white
                  = p " Save"
          
          -if cur_op == "edit"
            %div.span6.pull-left{:id => "edit_mode_tl_summary_save_div"}
              %hr
              &nbsp;&nbsp;&nbsp;&nbsp;
              = button_tag(:type => "submit", :onClick => "$('#busy_indicator').show()" ,:class => "btn btn-primary") do
                = p " Save changes"
              %a.pull-right{:href => "#{timeline_path(@timeline)}"} Return to timeline page
      
      /
      / Remaining UI is applicable only when it is in EDIT mode
      /          
      -if cur_op == "edit"
        /
        / ACTUAL TIMELINE EVENTS tab
        /
        /%div#tab-two.row.span11.tab-pane{:title => "Events for this timeline", :rel => "tooltip"}
        %div#tab-two.row.span12.tab-pane.active{:onClick => "$('#tl_events_saved_msg').hide()"}
          %div.span10.alert.alert-success.center{:id => "tl_events_saved_msg"}
            %strong
              All events saved.
          /
          / EXISTING EVENTS tab-panel
          /
          %div.span5{:id => "existing_events_container"}
            %div.span5.existingevents_heading_preview
              %div.span3
                %br
                %h4{:style => "margin-bottom: 10px"}
                  %i.icon-list
                  Events in this timeline
              %div.span1
                %br
                = render :partial => "timeline_preview", :locals => {:given_timeline_id => @timeline.id}
            %div.well
              %div.row
                %br
                %br
                %div.span1.pull-left
                  = label_tag 'Events', nil, :class => "bold-text"
                %div.span1.pull-right
                  %a.small-text{:href => "#", :onclick => "removeAllEventDivs()", :title => "Remove events listed here from the timeline", :rel => "tooltip"}
                    Remove all
              = hidden_field :timeline, :events, :id => "gathered_event_ids"
              %div#gathered_events
                = render :partial => "timelines/refresh_gathered_events",:locals => {:events => @events, :tl_obj => @timeline}
              %hr
              %a.pull-right{:href => "#{timeline_path(@timeline)}"} Return to timeline page
              
  
          %div.span6
            /%h2{:style => "margin-bottom: 10px"} &nbsp;
            %div.tabbable
              %ul.nav.nav-tabs{:id => "internal-tabs-navbar"}
                %li.active
                  %a{:href => "#tab1", :"data-toggle" => "tab", :title => "Search events present in PollenGrain", :rel => "tooltip"}
                    %i.icon-search
                    Search and use existing events
                %li
                  %a{:href => "#tab2", :"data-toggle" => "tab", :title => "Add a new event to this timeline ", :rel => "tooltip"}
                    %i.icon-plus
                    Add new event
  
              %div.tab-content
                /
                / SEARCH EVENTS tab
                /
                /%div#tab1.tab-pane.active{:title => "Search to get events. Then click on events of your choice to add them to this timeline", :rel => "tooltip"}
                %div#tab1.tab-pane.active{:onClick => "$('#tl_events_saved_msg').hide()"}
                  %p.packed
                    %small
                      1. Search existing PollenGrain events.
                      %br 
                      2. Click on one or more searched events to add them to this timeline.
                  %br
                  = form_tag(search_events_path, :remote => true) do
                    %div
                      = text_field_tag('query', nil, :placeholder => 'Search for events',
                      :class => "span2 search-query")
                      = button_tag(:type => "submit", :class => "btn btn-primary", :onClick => "showSearchWaitIndicator()") do
                        %i.icon-search.icon-white
                  %div#search_wait_indicator.well
                    %img.pull-left{ :src => "/assets/ajax-loader-black-white.gif",  :alt => "Loading"}
                    %h4 Getting search results ...
                  %div#search_results.well
                
                / 
                / ADD NEW EVENT tab    
                /  
                /%div#tab2.tab-pane{:title => "Enter details of a new event to be added to this timeline", :rel => "tooltip"}
                %div#tab2.tab-pane{:onClick => "$('#tl_events_saved_msg').hide()"}
                  - @event = Event.new
                  = render :partial => "events/new_edit_event_newlogic", :locals => {:event_obj => @event, :mode => "new_evt", :tl_obj => nil}

/============================================================================
:javascript
  $(document).ready(function() {
    $('#timeline_tags').tokenInput("/ac_search", {
      crossDomain: false,
      theme: "facebook",
      hintText: "Type in a tag",
      prePopulate: #{@timeline_tags_json}
    });
  });
  
  //--------------------------------------------------------------------------
  //
  // We want to warn people if they are about to leave this page.
  // Not any more. Hence commenting this.
  // window.onbeforeunload = confirmExit;
  
  // By default this flag is set so that warning popup is displayed while leaving this page.
  localWarnFlag = true;
  
  function confirmExit()
  {
    if(localWarnFlag == true)
      return "Please confirm that there are not any unsaved changes on this page to avoid any loss of data.";
    else
      return;
  }
  
  // If this flag is reset , then the warning popup will not be shown while leaving the page.
  function resetWarnFlag()
  {
    localWarnFlag = false;
  }
  
  //Editing the flag to true value so that warning popup can be shown while leaving this page.
  function setWarnFlag()
  {
    localWarnFlag = true;
  }
  //--------------------------------------------------------------------------
  //
  // To show help popover for various fields on 'create new event' page
  //
  $(function ()  
  {
    //
    //
    //For new 'timeline' related help
    $('.tl_upper_help_icon').popover({template: '<div class="popover tl-upperhelppopover"><div class="popover-inner helppopover-inner-tl"><h3 class="popover-title event_help_popover_title"></h3><div class="popover-content event_help_popover_content"><p></p></div></div></div>', html : true, content: function() { return $('#help_popup_' + this.id).html();}  });
    $('.tl_lower_help_icon').popover({template: '<div class="popover tl-lowerhelppopover"><div class="popover-inner helppopover-inner-tl"><h3 class="popover-title event_help_popover_title"></h3><div class="popover-content event_help_popover_content"><p></p></div></div></div>', html : true, content: function() { return $('#help_popup_' + this.id).html();}  });
    
  });
  //--------------------------------------------------------------------------                 


/
/ Below javascript stuff largely used in only edit mode.
/ Purposefully separated here. Some of them, if mixed in 'create new timeline' mode, causes problems
/ and none of the popups work on that page. So please don't mix these in common code unless you verify behvaior 
/ of both modes.
/  
-if cur_op == "edit"
  :javascript
    function cleanTLSummarySuccessMessage() {
      $('#tlsummarySuccessMessage').empty();
      $('#tlsummarySuccessMessage').addClass("hide");
    }
      
    function showSearchWaitIndicator() {
      $('#tl_events_saved_msg').hide();
      $('#search_results').hide();
      $('#search_wait_indicator').show();
    }
    function hideSearchWaitIndicator() {
      $('#search_results').show();
      $('#search_wait_indicator').hide();
    }
    
    /* A function to save the gathered events list to this timeline
     * Do the save only if tl_eventlist_dirty is 1
     *
     * 'evt_op' can have folloiwng values at present.
     *   - add_evt: new event to be added
     *   - rm_evt: one event to be removed
     *   - rm_all_evt: all events to be removed
     */
    function saveGatheredEvents(evt_op) {
      if (tl_eventlist_dirty == false) {
        return;
      } else {
        $('#busy_indicator').show();
        $("#tl_events_saved_msg").hide();
        var jqxhr = $.ajax({
                      type: "POST",
                      url: "/el_save",
                      data: {id: #{@timeline.id}, event_list: $("#gathered_event_ids").attr("value"), cur_op: evt_op}
                    }).done(function() { $('#busy_indicator').hide();console.log("done saving"); tl_eventlist_dirty = false; $("#tl_events_saved_msg").show();$(document).scrollTop(0); })
                      .fail(function() { $('#busy_indicator').hide();console.log("failed saving"); });
      };
    }
  
    // TEmp disabled by AMOL
    // Call saveGatheredEvents every 10 seconds
    //$(document).ready(function() {
    //  setInterval(saveGatheredEvents, 10000);
    //});
    
/----------------------------------------------------------------------------------------------------    
  